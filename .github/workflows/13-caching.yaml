name: 13 - Using Caching (Multi-Job)
on:
  workflow_dispatch:
    inputs:
      node-version:
        type: choice
        description: 'Node version'
        default: '20.x'
        options:
          - '18.x'
          - '20.x'
          - '21.x'
jobs:
  # JOB 1: O "INSTALADOR" - Sua única responsabilidade é preparar o cache.
  install-deps:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 13-caching/react-app
    # Este job vai "exportar" a chave de cache para os outros jobs usarem.
    outputs:
      deps-cache-key: ${{ steps.cache-key.outputs.CACHE_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
      # Este passo apenas CALCULA a chave e a define como um output do passo.
      - name: Calculate cache key
        id: cache-key
        run: echo "CACHE_KEY=deps-node-modules-${{ hashFiles('package-lock.json') }}" >> $GITHUB_OUTPUT

      - name: Download cached dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: 13-caching/react-app/node_modules
          # Usa a chave que foi calculada no passo anterior.
          key: ${{ steps.cache-key.outputs.CACHE_KEY }}

      - name: Install dependencies
        # Só roda se o cache não foi encontrado.
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

  # JOB 2: O "LINTER" - Roda em paralelo com o build, mas só depois da instalação.
  linting:
    runs-on: ubuntu-latest
    # Precisa que o job 'install-deps' termine com sucesso.
    needs: install-deps
    defaults:
      run:
        working-directory: 13-caching/react-app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}

      - name: Download cached dependencies
        uses: actions/cache@v4
        with:
          path: 13-caching/react-app/node_modules
          # Usa a chave de cache que foi "exportada" pelo job 'install-deps'.
          key: ${{ needs.install-deps.outputs.deps-cache-key }}

      - name: Testing
        run: npm run test

      - name: Linting
        run: echo "Linting..."

  # JOB 3: O "BUILDER" - Também roda em paralelo, só depois da instalação.
  build:
    runs-on: ubuntu-latest
    # Precisa que o job 'install-deps' termine com sucesso.
    needs: install-deps
    defaults:
      run:
        working-directory: 13-caching/react-app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}

      - name: Download cached dependencies
        uses: actions/cache@v4
        with:
          path: 13-caching/react-app/node_modules
          # Também usa a chave de cache exportada pelo 'install-deps'.
          key: ${{ needs.install-deps.outputs.deps-cache-key }}

      - name: Testing
        run: npm run test
      - name: Building
        run: npm run build
      - name: Deploying to nonprod
        run: echo "Deploying to nonprod"