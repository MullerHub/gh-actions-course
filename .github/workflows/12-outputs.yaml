name: 12 - Working with Outputs (Mistake Demo)
on:
  workflow_dispatch:
    inputs:
      build-status:
        type: choice
        description: 'Simulated status of the build'
        default: 'success'
        options:
          - success
          - failure
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      # Exportando 'build-status' e 'output1' do job
      build-status: ${{ steps.build.outputs.status }}
      output1: ${{ steps.build.outputs.output1 }}
    steps:
      - name: Build
        id: build
        run: |
          # 1. Adicionamos os dois primeiros outputs corretamente com '>>' (append)
          echo "status=${{ inputs.build-status }}" >> $GITHUB_OUTPUT
          echo "output1=value1" >> $GITHUB_OUTPUT
          
          echo "--- Conteúdo ANTES do erro ---"
          cat $GITHUB_OUTPUT
          
          # 2. O ERRO INTENCIONAL: usamos '>' (overwrite) em vez de '>>'
          # Isso vai APAGAR tudo que estava no arquivo e escrever apenas esta linha.
          echo "mistake=true" > $GITHUB_OUTPUT
          
          echo "--- Conteúdo DEPOIS do erro ---"
          cat $GITHUB_OUTPUT
          
          # 3. Tentamos adicionar um último output. Ele será adicionado ao arquivo já sobrescrito.
          echo "output2=value2" >> $GITHUB_OUTPUT
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.outputs.build-status == 'success'
    steps:
      - name: Print Outputs
        run: |
          echo "Deploying..."
          # Vamos tentar imprimir o output1 que deveria ter vindo do job 'build'
          echo "Output 1 from build job is: ---${{ needs.build.outputs.output1 }}---"